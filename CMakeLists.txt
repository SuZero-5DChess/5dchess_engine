cmake_minimum_required(VERSION 3.20)
project(5dchess_engine VERSION 1.0.0 LANGUAGES CXX)

# Set C++23 standard
set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# compiler-specific options for magic.cpp
if(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
    add_compile_options(-Wall -pedantic)
    add_compile_options(-fconstexpr-steps=100000000)
elseif(MSVC)
    add_compile_options(/W4 /permissive-)
    add_compile_options(/constexpr:steps100000000)
endif()


# Option for building tests
option(TEST "Build test executable" OFF)

# Find all source files in src/ and src/core/ directories
file(GLOB_RECURSE ENGINE_SOURCES 
    "${CMAKE_CURRENT_SOURCE_DIR}/src/core/*.cpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/src/misc/*.cpp"
)
# Find all header files
file(GLOB_RECURSE ENGINE_HEADERS 
    "${CMAKE_CURRENT_SOURCE_DIR}/src/core/*.h"
    "${CMAKE_CURRENT_SOURCE_DIR}/src/misc/*.h"
    "${CMAKE_CURRENT_SOURCE_DIR}/src/core/*.inl"
    "${CMAKE_CURRENT_SOURCE_DIR}/src/misc/*.inl"
)


# Create the core library target (without Python bindings)
add_library(5dchess_engine_core OBJECT ${ENGINE_SOURCES})
# Ensure header files show up in IDEs
target_sources(5dchess_engine_core PRIVATE ${ENGINE_HEADERS})
target_include_directories(5dchess_engine_core 
    PUBLIC 
        ${CMAKE_CURRENT_SOURCE_DIR}/src
        ${CMAKE_CURRENT_SOURCE_DIR}/src/core
        ${CMAKE_CURRENT_SOURCE_DIR}/src/misc
)

# Check if this is being built as a submodule
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
    # Standalone mode - include Python bindings / build tests
    
    # Build tests if enabled
    if(TEST)
        message(STATUS ">>> Compiling test.cpp...")
        add_executable(test_exec "test.cpp")
        target_link_libraries(test_exec PRIVATE 5dchess_engine_core)
        add_subdirectory(test)  # Add test directory
    else()
        message(STATUS ">>> Building python library...")
        # Add pybind11 for Python bindings
        add_subdirectory(extern/pybind11)
        
        # Create the Python module
        pybind11_add_module(engine bind.cpp)
        target_link_libraries(engine PRIVATE 5dchess_engine_core)
        
        # Fix Visual Studio output directories on Windows
        if(WIN32)
            # Get rid of the annoying Debug/Release folders generated by Visual Studio
            set_target_properties(engine PROPERTIES
                RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/$<0:> 
                LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/$<0:>
                ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/$<0:>
            )
        endif(WIN32)
    endif()
else()
    # Being used as a submodule - create an interface target
    add_library(5dchess_engine INTERFACE)
    target_link_libraries(5dchess_engine INTERFACE 5dchess_engine_core)
endif()

